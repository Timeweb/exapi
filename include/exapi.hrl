-record(state, {sref = "", connection = {}}).

%% Values for xml-rpc
-define(VALUE, "Value").
-define(PATH, "/").
-define(DEFAULT_SOCKET_PATH, "/var/xapi/xapi").

%% Default connection settings
-define(USER, "root").
-define(PORT, 80).

%% Session
-define(LOGIN, 'session.login_with_password').
-define(LOGOUT, 'session.logout').

%% VM
-define(START, 'VM.start').
-define(CLEAN_SHUTDOWN, 'VM.clean_shutdown').
-define(CLEAN_REBOOT, 'VM.clean_reboot').
-define(VM_GET_ALL, 'VM.get_all').
-define(VM_GET_RECORD, 'VM.get_record').
-define(VM_METRICS_GET_RECORD, 'VM_metrics.get_record').
-define(GET_BY_NAME_LABEL, 'VM.get_by_name_label').
-define(VM_CLONE, 'VM.clone').
-define(VM_HARD_REBOOT, 'VM.hard_reboot').
-define(VM_HARD_SHUTDOWN, 'VM.hard_shutdown').
-define(VM_ADD_TO_OTHER_CONFIG, 'VM.add_to_other_config').
-define(VM_DESTROY, 'VM.destroy').
-define(VM_GET_DOMID, 'VM.get_domid').
-define(VM_GET_HVM_BOOT_POLICY, 'VM.get_HVM_boot_policy').
-define(VM_GET_POWER_STATE, 'VM.get_power_state').
-define(VM_GET_PV_ARGS, 'VM.get_PV_args').
-define(VM_GET_VBDS, 'VM.get_VBDs').
-define(VM_GET_VIFS, 'VM.get_VIFs').
-define(VM_PROVISION, 'VM.provision').
-define(VM_REMOVE_FROM_OTHER_CONFIG, 'VM.remove_from_other_config').
-define(VM_SET_HVM_BOOT_POLICY, 'VM.set_HVM_boot_policy').
-define(VM_SET_MEMORY_LIMITS, 'VM.set_memory_limits').
-define(VM_SET_NAME_DESCRIPTION, 'VM.set_name_description').
-define(VM_SET_NAME_LABEL, 'VM.set_name_label').
-define(VM_SET_PV_ARGS, 'VM.set_PV_args').
-define(VM_SET_PV_BOOTLOADER, 'VM.set_PV_bootloader').
-define(VM_SET_VCPUS_AT_STARTUP, 'VM.set_VCPUs_at_startup').
-define(VM_SET_VCPUS_MAX, 'VM.set_VCPUs_max').
-define(VM_SET_VCPUS_PARAMS, 'VM.set_VCPUs_params').
-define(VBD_CREATE, 'VBD.create').
-define(VBD_DESTROY, 'VBD.destroy').
-define(VBD_GET_CURRENTLY_ATTACHED, 'VBD.get_currently_attached').
-define(VBD_GET_MODE, 'VBD.get_mode').
-define(VBD_GET_RECORD, 'VBD.get_record').
-define(VBD_GET_TYPE, 'VBD.get_type').
-define(VBD_GET_USERDEVICE, 'VBD.get_userdevice').
-define(VBD_GET_VDI, 'VBD.get_VDI').
-define(VBD_PLUG, 'VBD.plug').
-define(VBD_UNPLUG, 'VBD.unplug').
-define(VBD_UNPLUG_FORCE, 'VBD.unplug_force').
-define(VDI_CLONE, 'VDI.clone').
-define(VDI_COPY, 'VDI.copy').
-define(VDI_CREATE, 'VDI.create').
-define(VDI_DESTROY, 'VDI.destroy').
-define(VDI_GET_BY_NAME_LABEL, 'VDI.get_by_name_label').
-define(VDI_GET_IS_A_SNAPSHOT, 'VDI.get_is_a_snapshot').
-define(VDI_GET_UUID, 'VDI.get_uuid').
-define(VDI_GET_VBDS, 'VDI.get_VBDs').
-define(VDI_GET_VIRTUAL_SIZE, 'VDI.get_virtual_size').
-define(VDI_RESIZE, 'VDI.resize').
-define(VDI_SET_NAME_DESCRIPTION, 'VDI.set_name_description').
-define(VDI_SET_NAME_LABEL, 'VDI.set_name_label').
-define(VDI_SNAPSHOT, 'VDI.snapshot').
-define(HOST_CALL_PLUGIN, 'host.call_plugin').
-define(HOST_GET_BY_NAME_LABEL, 'host.get_by_name_label').
-define(HOST_GET_RECORD, 'host.get_record').
-define(NETWORK_CREATE, 'network.create').
-define(NETWORK_GET_VIFS, 'network.get_VIFs').
-define(NETWORK_GET_PIFS, 'network.get_PIFs').
-define(SR_GET_UUID, 'SR.get_uuid').
-define(VIF_ADD_IPV4_ALLOWED, 'VIF.add_ipv4_allowed').
-define(VIF_ADD_IPV6_ALLOWED, 'VIF.add_ipv6_allowed').
-define(VIF_CREATE, 'VIF.create').
-define(VIF_DESTROY, 'VIF.destroy').
-define(VIF_GET_MAC, 'VIF.get_MAC').
-define(VIF_GET_RECORD, 'VIF.get_record').
-define(VIF_REMOVE_IPV4_ALLOWED, 'VIF.remove_ipv4_allowed').
-define(VIF_SET_IPV4_ALLOWED, 'VIF.set_ipv4_allowed').
-define(VIF_SET_LOCKING_MODE, 'VIF.set_locking_mode').
-define(VIF_SET_QOS_ALGORITHM_PARAMS, 'VIF.set_qos_algorithm_params').
-define(VLAN_CREATE, 'vlan.create').
